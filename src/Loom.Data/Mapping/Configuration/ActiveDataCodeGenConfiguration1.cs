//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Loom.Data.Mapping.Configuration {
    using System;
    using System.Configuration;
    
    
    public class ProviderElement : System.Configuration.ConfigurationElement {
        
        [System.Configuration.ConfigurationProperty("name", DefaultValue="", IsKey=false, IsRequired=false)]
        public string Name {
            get {
                return ((string)(base["name"]));
            }
            set {
                base["name"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("type", DefaultValue="", IsKey=false, IsRequired=false)]
        public string Type {
            get {
                return ((string)(base["type"]));
            }
            set {
                base["type"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("connectionString", DefaultValue="", IsKey=false, IsRequired=false)]
        public string ConnectionString {
            get {
                return ((string)(base["connectionString"]));
            }
            set {
                base["connectionString"] = value;
            }
        }
    }
    
    public class CodeGenElement : System.Configuration.ConfigurationElement {
        
        [System.Configuration.ConfigurationProperty("useNullableTypes", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool UseNullableTypes {
            get {
                return ((bool)(base["useNullableTypes"]));
            }
            set {
                base["useNullableTypes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("baseNamespace", DefaultValue="", IsKey=false, IsRequired=false)]
        public string BaseNamespace {
            get {
                return ((string)(base["baseNamespace"]));
            }
            set {
                base["baseNamespace"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("templateDirectory", DefaultValue="", IsKey=false, IsRequired=false)]
        public string TemplateDirectory {
            get {
                return ((string)(base["templateDirectory"]));
            }
            set {
                base["templateDirectory"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateTables", DefaultValue=true, IsKey=false, IsRequired=false)]
        public bool GenerateTables {
            get {
                return ((bool)(base["generateTables"]));
            }
            set {
                base["generateTables"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateViews", DefaultValue=true, IsKey=false, IsRequired=false)]
        public bool GenerateViews {
            get {
                return ((bool)(base["generateViews"]));
            }
            set {
                base["generateViews"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateProcedures", DefaultValue=true, IsKey=false, IsRequired=false)]
        public bool GenerateProcedures {
            get {
                return ((bool)(base["generateProcedures"]));
            }
            set {
                base["generateProcedures"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateCollectMethods", DefaultValue=true, IsKey=false, IsRequired=false)]
        public bool GenerateCollectMethods {
            get {
                return ((bool)(base["generateCollectMethods"]));
            }
            set {
                base["generateCollectMethods"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("schemaExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SchemaExcludes {
            get {
                return ((string)(base["schemaExcludes"]));
            }
            set {
                base["schemaExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("prefixExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string PrefixExcludes {
            get {
                return ((string)(base["prefixExcludes"]));
            }
            set {
                base["prefixExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("suffixExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SuffixExcludes {
            get {
                return ((string)(base["suffixExcludes"]));
            }
            set {
                base["suffixExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("serializationNamespace", DefaultValue="http://www.colossusinteractive.com/ns/frameworks/loom/data/mapping", IsKey=false, IsRequired=false)]
        public string SerializationNamespace {
            get {
                return ((string)(base["serializationNamespace"]));
            }
            set {
                base["serializationNamespace"] = value;
            }
        }
    }
    
    public class AuditMappingElement : System.Configuration.ConfigurationElement {
        
        [System.Configuration.ConfigurationProperty("createdOnColumn", DefaultValue="CreatedOn", IsKey=false, IsRequired=false)]
        public string CreatedOnColumn {
            get {
                return ((string)(base["createdOnColumn"]));
            }
            set {
                base["createdOnColumn"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("createdbyColumn", DefaultValue="CreatedBy", IsKey=false, IsRequired=false)]
        public string CreatedbyColumn {
            get {
                return ((string)(base["createdbyColumn"]));
            }
            set {
                base["createdbyColumn"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("modifiedOnColumn", DefaultValue="ModifiedOn", IsKey=false, IsRequired=false)]
        public string ModifiedOnColumn {
            get {
                return ((string)(base["modifiedOnColumn"]));
            }
            set {
                base["modifiedOnColumn"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("modifiedByColumn", DefaultValue="ModifiedBy", IsKey=false, IsRequired=false)]
        public string ModifiedByColumn {
            get {
                return ((string)(base["modifiedByColumn"]));
            }
            set {
                base["modifiedByColumn"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("deletedOnColumn", DefaultValue="DeletedOn", IsKey=false, IsRequired=false)]
        public string DeletedOnColumn {
            get {
                return ((string)(base["deletedOnColumn"]));
            }
            set {
                base["deletedOnColumn"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("deletedByColumn", DefaultValue="DeletedBy", IsKey=false, IsRequired=false)]
        public string DeletedByColumn {
            get {
                return ((string)(base["deletedByColumn"]));
            }
            set {
                base["deletedByColumn"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("deletedColumn", DefaultValue="Deleted", IsKey=false, IsRequired=false)]
        public string DeletedColumn {
            get {
                return ((string)(base["deletedColumn"]));
            }
            set {
                base["deletedColumn"] = value;
            }
        }
    }
    
    public class CharAsBooleanColumnsElement : System.Configuration.ConfigurationElement {
        
        [System.Configuration.ConfigurationProperty("table", DefaultValue="", IsKey=true, IsRequired=true)]
        public string Table {
            get {
                return ((string)(base["table"]));
            }
            set {
                base["table"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("owner", DefaultValue="", IsKey=false, IsRequired=false)]
        public string Owner {
            get {
                return ((string)(base["owner"]));
            }
            set {
                base["owner"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("column", DefaultValue="", IsKey=false, IsRequired=false)]
        public string Column {
            get {
                return ((string)(base["column"]));
            }
            set {
                base["column"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("valueTrue", DefaultValue="Y", IsKey=false, IsRequired=false)]
        public string ValueTrue {
            get {
                return ((string)(base["valueTrue"]));
            }
            set {
                base["valueTrue"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("valueFalse", DefaultValue="N", IsKey=false, IsRequired=false)]
        public string ValueFalse {
            get {
                return ((string)(base["valueFalse"]));
            }
            set {
                base["valueFalse"] = value;
            }
        }
    }
    
    [System.Configuration.ConfigurationCollectionAttribute(typeof(CharAsBooleanColumnsElement))]
    public class CharAsBooleanColumnsCollection : System.Configuration.ConfigurationElementCollection {
        
        protected override System.Configuration.ConfigurationElement CreateNewElement() {
            return new CharAsBooleanColumnsElement();
        }
        
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) {
            return ((CharAsBooleanColumnsElement)(element)).Table;
        }
        
        public void Add(CharAsBooleanColumnsElement element) {
            this.BaseAdd(element);
        }
        
        public void Remove(string key) {
            this.BaseRemove(key);
        }
        
        public void Clear() {
            this.BaseClear();
        }
    }
    
    public class ViewsElement : System.Configuration.ConfigurationElement {
        
        [System.Configuration.ConfigurationProperty("name", DefaultValue="", IsKey=true, IsRequired=true)]
        public string Name {
            get {
                return ((string)(base["name"]));
            }
            set {
                base["name"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("owner", DefaultValue="dbo", IsKey=false, IsRequired=false)]
        public string Owner {
            get {
                return ((string)(base["owner"]));
            }
            set {
                base["owner"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("exclude", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool Exclude {
            get {
                return ((bool)(base["exclude"]));
            }
            set {
                base["exclude"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("identityAsKey", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool IdentityAsKey {
            get {
                return ((bool)(base["identityAsKey"]));
            }
            set {
                base["identityAsKey"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("charAsBooleanColumns", DefaultValue="", IsKey=false, IsRequired=false)]
        public string CharAsBooleanColumns {
            get {
                return ((string)(base["charAsBooleanColumns"]));
            }
            set {
                base["charAsBooleanColumns"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateConstriants", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GenerateConstriants {
            get {
                return ((bool)(base["generateConstriants"]));
            }
            set {
                base["generateConstriants"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("renameTo", DefaultValue="", IsKey=false, IsRequired=false)]
        public string RenameTo {
            get {
                return ((string)(base["renameTo"]));
            }
            set {
                base["renameTo"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("addSuffix", DefaultValue="", IsKey=false, IsRequired=false)]
        public string AddSuffix {
            get {
                return ((string)(base["addSuffix"]));
            }
            set {
                base["addSuffix"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("addPrefix", DefaultValue="", IsKey=false, IsRequired=false)]
        public string AddPrefix {
            get {
                return ((string)(base["addPrefix"]));
            }
            set {
                base["addPrefix"] = value;
            }
        }
    }
    
    [System.Configuration.ConfigurationCollectionAttribute(typeof(ViewsElement))]
    public class ViewsCollection : System.Configuration.ConfigurationElementCollection {
        
        [System.Configuration.ConfigurationProperty("explicitInclude", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool ExplicitInclude {
            get {
                return ((bool)(base["explicitInclude"]));
            }
            set {
                base["explicitInclude"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("schemaIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SchemaIncludes {
            get {
                return ((string)(base["schemaIncludes"]));
            }
            set {
                base["schemaIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("prefixIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string PrefixIncludes {
            get {
                return ((string)(base["prefixIncludes"]));
            }
            set {
                base["prefixIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("suffixIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SuffixIncludes {
            get {
                return ((string)(base["suffixIncludes"]));
            }
            set {
                base["suffixIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("schemaExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SchemaExcludes {
            get {
                return ((string)(base["schemaExcludes"]));
            }
            set {
                base["schemaExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("prefixExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string PrefixExcludes {
            get {
                return ((string)(base["prefixExcludes"]));
            }
            set {
                base["prefixExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("suffixExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SuffixExcludes {
            get {
                return ((string)(base["suffixExcludes"]));
            }
            set {
                base["suffixExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("regex", DefaultValue="", IsKey=false, IsRequired=false)]
        public string Regex {
            get {
                return ((string)(base["regex"]));
            }
            set {
                base["regex"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateConstraints", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GenerateConstraints {
            get {
                return ((bool)(base["generateConstraints"]));
            }
            set {
                base["generateConstraints"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generatePartialClasses", DefaultValue=true, IsKey=false, IsRequired=false)]
        public bool GeneratePartialClasses {
            get {
                return ((bool)(base["generatePartialClasses"]));
            }
            set {
                base["generatePartialClasses"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("enableAutoVersioning", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool EnableAutoVersioning {
            get {
                return ((bool)(base["enableAutoVersioning"]));
            }
            set {
                base["enableAutoVersioning"] = value;
            }
        }
        
        protected override System.Configuration.ConfigurationElement CreateNewElement() {
            return new ViewsElement();
        }
        
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) {
            return ((ViewsElement)(element)).Name;
        }
        
        public void Add(ViewsElement element) {
            this.BaseAdd(element);
        }
        
        public void Remove(string key) {
            this.BaseRemove(key);
        }
        
        public void Clear() {
            this.BaseClear();
        }
    }
    
    public class ProceduresElement : System.Configuration.ConfigurationElement {
        
        [System.Configuration.ConfigurationProperty("name", DefaultValue="", IsKey=true, IsRequired=true)]
        public string Name {
            get {
                return ((string)(base["name"]));
            }
            set {
                base["name"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("owner", DefaultValue="dbo", IsKey=false, IsRequired=false)]
        public string Owner {
            get {
                return ((string)(base["owner"]));
            }
            set {
                base["owner"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("exclude", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool Exclude {
            get {
                return ((bool)(base["exclude"]));
            }
            set {
                base["exclude"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("charAsBooleanColumns", DefaultValue="", IsKey=false, IsRequired=false)]
        public string CharAsBooleanColumns {
            get {
                return ((string)(base["charAsBooleanColumns"]));
            }
            set {
                base["charAsBooleanColumns"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateConstriants", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GenerateConstriants {
            get {
                return ((bool)(base["generateConstriants"]));
            }
            set {
                base["generateConstriants"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("renameTo", DefaultValue="", IsKey=false, IsRequired=false)]
        public string RenameTo {
            get {
                return ((string)(base["renameTo"]));
            }
            set {
                base["renameTo"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("addSuffix", DefaultValue="", IsKey=false, IsRequired=false)]
        public string AddSuffix {
            get {
                return ((string)(base["addSuffix"]));
            }
            set {
                base["addSuffix"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("addPrefix", DefaultValue="", IsKey=false, IsRequired=false)]
        public string AddPrefix {
            get {
                return ((string)(base["addPrefix"]));
            }
            set {
                base["addPrefix"] = value;
            }
        }
    }
    
    [System.Configuration.ConfigurationCollectionAttribute(typeof(ProceduresElement))]
    public class ProceduresCollection : System.Configuration.ConfigurationElementCollection {
        
        [System.Configuration.ConfigurationProperty("explicitInclude", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool ExplicitInclude {
            get {
                return ((bool)(base["explicitInclude"]));
            }
            set {
                base["explicitInclude"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("schemaIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SchemaIncludes {
            get {
                return ((string)(base["schemaIncludes"]));
            }
            set {
                base["schemaIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("prefixIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string PrefixIncludes {
            get {
                return ((string)(base["prefixIncludes"]));
            }
            set {
                base["prefixIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("suffixIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SuffixIncludes {
            get {
                return ((string)(base["suffixIncludes"]));
            }
            set {
                base["suffixIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("schemaExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SchemaExcludes {
            get {
                return ((string)(base["schemaExcludes"]));
            }
            set {
                base["schemaExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("prefixExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string PrefixExcludes {
            get {
                return ((string)(base["prefixExcludes"]));
            }
            set {
                base["prefixExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("suffixExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SuffixExcludes {
            get {
                return ((string)(base["suffixExcludes"]));
            }
            set {
                base["suffixExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("regex", DefaultValue="", IsKey=false, IsRequired=false)]
        public string Regex {
            get {
                return ((string)(base["regex"]));
            }
            set {
                base["regex"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateConstraints", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GenerateConstraints {
            get {
                return ((bool)(base["generateConstraints"]));
            }
            set {
                base["generateConstraints"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generatePartialClasses", DefaultValue=true, IsKey=false, IsRequired=false)]
        public bool GeneratePartialClasses {
            get {
                return ((bool)(base["generatePartialClasses"]));
            }
            set {
                base["generatePartialClasses"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("enableAutoVersioning", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool EnableAutoVersioning {
            get {
                return ((bool)(base["enableAutoVersioning"]));
            }
            set {
                base["enableAutoVersioning"] = value;
            }
        }
        
        protected override System.Configuration.ConfigurationElement CreateNewElement() {
            return new ProceduresElement();
        }
        
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) {
            return ((ProceduresElement)(element)).Name;
        }
        
        public void Add(ProceduresElement element) {
            this.BaseAdd(element);
        }
        
        public void Remove(string key) {
            this.BaseRemove(key);
        }
        
        public void Clear() {
            this.BaseClear();
        }
    }
    
    public class TablesElement : System.Configuration.ConfigurationElement {
        
        [System.Configuration.ConfigurationProperty("name", DefaultValue="", IsKey=true, IsRequired=true)]
        public string Name {
            get {
                return ((string)(base["name"]));
            }
            set {
                base["name"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("owner", DefaultValue="dbo", IsKey=false, IsRequired=false)]
        public string Owner {
            get {
                return ((string)(base["owner"]));
            }
            set {
                base["owner"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("exclude", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool Exclude {
            get {
                return ((bool)(base["exclude"]));
            }
            set {
                base["exclude"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("identityAsKey", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool IdentityAsKey {
            get {
                return ((bool)(base["identityAsKey"]));
            }
            set {
                base["identityAsKey"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("charAsBooleanColumns", DefaultValue="", IsKey=false, IsRequired=false)]
        public string CharAsBooleanColumns {
            get {
                return ((string)(base["charAsBooleanColumns"]));
            }
            set {
                base["charAsBooleanColumns"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateConstriants", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GenerateConstriants {
            get {
                return ((bool)(base["generateConstriants"]));
            }
            set {
                base["generateConstriants"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generatePrimaryKeyObjects", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GeneratePrimaryKeyObjects {
            get {
                return ((bool)(base["generatePrimaryKeyObjects"]));
            }
            set {
                base["generatePrimaryKeyObjects"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateForeignKeyCollections", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GenerateForeignKeyCollections {
            get {
                return ((bool)(base["generateForeignKeyCollections"]));
            }
            set {
                base["generateForeignKeyCollections"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("renameTo", DefaultValue="", IsKey=false, IsRequired=false)]
        public string RenameTo {
            get {
                return ((string)(base["renameTo"]));
            }
            set {
                base["renameTo"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("addSuffix", DefaultValue="", IsKey=false, IsRequired=false)]
        public string AddSuffix {
            get {
                return ((string)(base["addSuffix"]));
            }
            set {
                base["addSuffix"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("addPrefix", DefaultValue="", IsKey=false, IsRequired=false)]
        public string AddPrefix {
            get {
                return ((string)(base["addPrefix"]));
            }
            set {
                base["addPrefix"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("insertProcedure", DefaultValue="", IsKey=false, IsRequired=false)]
        public string InsertProcedure {
            get {
                return ((string)(base["insertProcedure"]));
            }
            set {
                base["insertProcedure"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("updateProcedure", DefaultValue="", IsKey=false, IsRequired=false)]
        public string UpdateProcedure {
            get {
                return ((string)(base["updateProcedure"]));
            }
            set {
                base["updateProcedure"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("deleteProdecure", DefaultValue="", IsKey=false, IsRequired=false)]
        public string DeleteProdecure {
            get {
                return ((string)(base["deleteProdecure"]));
            }
            set {
                base["deleteProdecure"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("localizableColumns", DefaultValue="", IsKey=false, IsRequired=false)]
        public string LocalizableColumns {
            get {
                return ((string)(base["localizableColumns"]));
            }
            set {
                base["localizableColumns"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("localizationTableSchema", DefaultValue="dbo", IsKey=false, IsRequired=false)]
        public string LocalizationTableSchema {
            get {
                return ((string)(base["localizationTableSchema"]));
            }
            set {
                base["localizationTableSchema"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("localizationTableName", DefaultValue="", IsKey=false, IsRequired=false)]
        public string LocalizationTableName {
            get {
                return ((string)(base["localizationTableName"]));
            }
            set {
                base["localizationTableName"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("baseTableSchema", DefaultValue="dbo", IsKey=false, IsRequired=false)]
        public string BaseTableSchema {
            get {
                return ((string)(base["baseTableSchema"]));
            }
            set {
                base["baseTableSchema"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("baseTableName", DefaultValue="", IsKey=false, IsRequired=false)]
        public string BaseTableName {
            get {
                return ((string)(base["baseTableName"]));
            }
            set {
                base["baseTableName"] = value;
            }
        }
    }
    
    [System.Configuration.ConfigurationCollectionAttribute(typeof(TablesElement))]
    public class TablesCollection : System.Configuration.ConfigurationElementCollection {
        
        [System.Configuration.ConfigurationProperty("explicitInclude", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool ExplicitInclude {
            get {
                return ((bool)(base["explicitInclude"]));
            }
            set {
                base["explicitInclude"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("schemaIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SchemaIncludes {
            get {
                return ((string)(base["schemaIncludes"]));
            }
            set {
                base["schemaIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("prefixIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string PrefixIncludes {
            get {
                return ((string)(base["prefixIncludes"]));
            }
            set {
                base["prefixIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("suffixIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SuffixIncludes {
            get {
                return ((string)(base["suffixIncludes"]));
            }
            set {
                base["suffixIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("schemaExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SchemaExcludes {
            get {
                return ((string)(base["schemaExcludes"]));
            }
            set {
                base["schemaExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("prefixExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string PrefixExcludes {
            get {
                return ((string)(base["prefixExcludes"]));
            }
            set {
                base["prefixExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("suffixExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SuffixExcludes {
            get {
                return ((string)(base["suffixExcludes"]));
            }
            set {
                base["suffixExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("regex", DefaultValue="", IsKey=false, IsRequired=false)]
        public string Regex {
            get {
                return ((string)(base["regex"]));
            }
            set {
                base["regex"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateConstraints", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GenerateConstraints {
            get {
                return ((bool)(base["generateConstraints"]));
            }
            set {
                base["generateConstraints"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generatePrimaryKeyObjects", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GeneratePrimaryKeyObjects {
            get {
                return ((bool)(base["generatePrimaryKeyObjects"]));
            }
            set {
                base["generatePrimaryKeyObjects"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateForeignKeyCollections", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GenerateForeignKeyCollections {
            get {
                return ((bool)(base["generateForeignKeyCollections"]));
            }
            set {
                base["generateForeignKeyCollections"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generatePartialClasses", DefaultValue=true, IsKey=false, IsRequired=false)]
        public bool GeneratePartialClasses {
            get {
                return ((bool)(base["generatePartialClasses"]));
            }
            set {
                base["generatePartialClasses"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("enableAutoVersioning", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool EnableAutoVersioning {
            get {
                return ((bool)(base["enableAutoVersioning"]));
            }
            set {
                base["enableAutoVersioning"] = value;
            }
        }
        
        protected override System.Configuration.ConfigurationElement CreateNewElement() {
            return new TablesElement();
        }
        
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) {
            return ((TablesElement)(element)).Name;
        }
        
        public void Add(TablesElement element) {
            this.BaseAdd(element);
        }
        
        public void Remove(string key) {
            this.BaseRemove(key);
        }
        
        public void Clear() {
            this.BaseClear();
        }
    }
    
    public class CompositeTablesElement : System.Configuration.ConfigurationElement {
        
        [System.Configuration.ConfigurationProperty("name", DefaultValue="", IsKey=true, IsRequired=true)]
        public string Name {
            get {
                return ((string)(base["name"]));
            }
            set {
                base["name"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("table", DefaultValue="", IsKey=false, IsRequired=false)]
        public string Table {
            get {
                return ((string)(base["table"]));
            }
            set {
                base["table"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("owner", DefaultValue="dbo", IsKey=false, IsRequired=false)]
        public string Owner {
            get {
                return ((string)(base["owner"]));
            }
            set {
                base["owner"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("columns", DefaultValue="*", IsKey=false, IsRequired=false)]
        public string Columns {
            get {
                return ((string)(base["columns"]));
            }
            set {
                base["columns"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("identityAsKey", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool IdentityAsKey {
            get {
                return ((bool)(base["identityAsKey"]));
            }
            set {
                base["identityAsKey"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("charAsBooleanColumns", DefaultValue="", IsKey=false, IsRequired=false)]
        public string CharAsBooleanColumns {
            get {
                return ((string)(base["charAsBooleanColumns"]));
            }
            set {
                base["charAsBooleanColumns"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateConstriants", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GenerateConstriants {
            get {
                return ((bool)(base["generateConstriants"]));
            }
            set {
                base["generateConstriants"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generatePrimaryKeyObjects", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GeneratePrimaryKeyObjects {
            get {
                return ((bool)(base["generatePrimaryKeyObjects"]));
            }
            set {
                base["generatePrimaryKeyObjects"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generatePartialClasses", DefaultValue=true, IsKey=false, IsRequired=false)]
        public bool GeneratePartialClasses {
            get {
                return ((bool)(base["generatePartialClasses"]));
            }
            set {
                base["generatePartialClasses"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateForeignKeyCollections", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GenerateForeignKeyCollections {
            get {
                return ((bool)(base["generateForeignKeyCollections"]));
            }
            set {
                base["generateForeignKeyCollections"] = value;
            }
        }
    }
    
    [System.Configuration.ConfigurationCollectionAttribute(typeof(CompositeTablesElement))]
    public class CompositeTablesCollection : System.Configuration.ConfigurationElementCollection {
        
        protected override System.Configuration.ConfigurationElement CreateNewElement() {
            return new CompositeTablesElement();
        }
        
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) {
            return ((CompositeTablesElement)(element)).Name;
        }
        
        public void Add(CompositeTablesElement element) {
            this.BaseAdd(element);
        }
        
        public void Remove(string key) {
            this.BaseRemove(key);
        }
        
        public void Clear() {
            this.BaseClear();
        }
    }
    
    public class EnumTablesElement : System.Configuration.ConfigurationElement {
        
        [System.Configuration.ConfigurationProperty("name", DefaultValue="", IsKey=true, IsRequired=true)]
        public string Name {
            get {
                return ((string)(base["name"]));
            }
            set {
                base["name"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("owner", DefaultValue="dbo", IsKey=false, IsRequired=false)]
        public string Owner {
            get {
                return ((string)(base["owner"]));
            }
            set {
                base["owner"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("keyOrdinal", DefaultValue=0, IsKey=false, IsRequired=false)]
        public int KeyOrdinal {
            get {
                return ((int)(base["keyOrdinal"]));
            }
            set {
                base["keyOrdinal"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("valueOrdinal", DefaultValue=1, IsKey=false, IsRequired=false)]
        public int ValueOrdinal {
            get {
                return ((int)(base["valueOrdinal"]));
            }
            set {
                base["valueOrdinal"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("exclude", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool Exclude {
            get {
                return ((bool)(base["exclude"]));
            }
            set {
                base["exclude"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("renameTo", DefaultValue="", IsKey=false, IsRequired=false)]
        public string RenameTo {
            get {
                return ((string)(base["renameTo"]));
            }
            set {
                base["renameTo"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("addSuffix", DefaultValue="", IsKey=false, IsRequired=false)]
        public string AddSuffix {
            get {
                return ((string)(base["addSuffix"]));
            }
            set {
                base["addSuffix"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("addPrefix", DefaultValue="", IsKey=false, IsRequired=false)]
        public string AddPrefix {
            get {
                return ((string)(base["addPrefix"]));
            }
            set {
                base["addPrefix"] = value;
            }
        }
    }
    
    [System.Configuration.ConfigurationCollectionAttribute(typeof(EnumTablesElement))]
    public class EnumTablesCollection : System.Configuration.ConfigurationElementCollection {
        
        [System.Configuration.ConfigurationProperty("explicitInclude", DefaultValue=true, IsKey=false, IsRequired=false)]
        public bool ExplicitInclude {
            get {
                return ((bool)(base["explicitInclude"]));
            }
            set {
                base["explicitInclude"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("schemaIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SchemaIncludes {
            get {
                return ((string)(base["schemaIncludes"]));
            }
            set {
                base["schemaIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("prefixIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string PrefixIncludes {
            get {
                return ((string)(base["prefixIncludes"]));
            }
            set {
                base["prefixIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("suffixIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SuffixIncludes {
            get {
                return ((string)(base["suffixIncludes"]));
            }
            set {
                base["suffixIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("schemaExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SchemaExcludes {
            get {
                return ((string)(base["schemaExcludes"]));
            }
            set {
                base["schemaExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("prefixExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string PrefixExcludes {
            get {
                return ((string)(base["prefixExcludes"]));
            }
            set {
                base["prefixExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("suffixExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SuffixExcludes {
            get {
                return ((string)(base["suffixExcludes"]));
            }
            set {
                base["suffixExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("keyOrdinal", DefaultValue=0, IsKey=false, IsRequired=false)]
        public int KeyOrdinal {
            get {
                return ((int)(base["keyOrdinal"]));
            }
            set {
                base["keyOrdinal"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("valueOrdinal", DefaultValue=1, IsKey=false, IsRequired=false)]
        public int ValueOrdinal {
            get {
                return ((int)(base["valueOrdinal"]));
            }
            set {
                base["valueOrdinal"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("activeColumn", DefaultValue="Active", IsKey=false, IsRequired=false)]
        public string ActiveColumn {
            get {
                return ((string)(base["activeColumn"]));
            }
            set {
                base["activeColumn"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("generateDataRecord", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool GenerateDataRecord {
            get {
                return ((bool)(base["generateDataRecord"]));
            }
            set {
                base["generateDataRecord"] = value;
            }
        }
        
        protected override System.Configuration.ConfigurationElement CreateNewElement() {
            return new EnumTablesElement();
        }
        
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) {
            return ((EnumTablesElement)(element)).Name;
        }
        
        public void Add(EnumTablesElement element) {
            this.BaseAdd(element);
        }
        
        public void Remove(string key) {
            this.BaseRemove(key);
        }
        
        public void Clear() {
            this.BaseClear();
        }
    }
    
    public class LookupTablesElement : System.Configuration.ConfigurationElement {
        
        [System.Configuration.ConfigurationProperty("name", DefaultValue="", IsKey=true, IsRequired=true)]
        public string Name {
            get {
                return ((string)(base["name"]));
            }
            set {
                base["name"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("owner", DefaultValue="dbo", IsKey=false, IsRequired=false)]
        public string Owner {
            get {
                return ((string)(base["owner"]));
            }
            set {
                base["owner"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("keyOrdinal", DefaultValue=0, IsKey=false, IsRequired=false)]
        public int KeyOrdinal {
            get {
                return ((int)(base["keyOrdinal"]));
            }
            set {
                base["keyOrdinal"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("valueOrdinal", DefaultValue=1, IsKey=false, IsRequired=false)]
        public int ValueOrdinal {
            get {
                return ((int)(base["valueOrdinal"]));
            }
            set {
                base["valueOrdinal"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("exclude", DefaultValue=false, IsKey=false, IsRequired=false)]
        public bool Exclude {
            get {
                return ((bool)(base["exclude"]));
            }
            set {
                base["exclude"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("renameTo", DefaultValue="", IsKey=false, IsRequired=false)]
        public string RenameTo {
            get {
                return ((string)(base["renameTo"]));
            }
            set {
                base["renameTo"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("addSuffix", DefaultValue="", IsKey=false, IsRequired=false)]
        public string AddSuffix {
            get {
                return ((string)(base["addSuffix"]));
            }
            set {
                base["addSuffix"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("addPrefix", DefaultValue="", IsKey=false, IsRequired=false)]
        public string AddPrefix {
            get {
                return ((string)(base["addPrefix"]));
            }
            set {
                base["addPrefix"] = value;
            }
        }
    }
    
    [System.Configuration.ConfigurationCollectionAttribute(typeof(LookupTablesElement))]
    public class LookupTablesCollection : System.Configuration.ConfigurationElementCollection {
        
        [System.Configuration.ConfigurationProperty("explicitInclude", DefaultValue=true, IsKey=false, IsRequired=false)]
        public bool ExplicitInclude {
            get {
                return ((bool)(base["explicitInclude"]));
            }
            set {
                base["explicitInclude"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("schemaIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SchemaIncludes {
            get {
                return ((string)(base["schemaIncludes"]));
            }
            set {
                base["schemaIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("prefixIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string PrefixIncludes {
            get {
                return ((string)(base["prefixIncludes"]));
            }
            set {
                base["prefixIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("suffixIncludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SuffixIncludes {
            get {
                return ((string)(base["suffixIncludes"]));
            }
            set {
                base["suffixIncludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("schemaExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SchemaExcludes {
            get {
                return ((string)(base["schemaExcludes"]));
            }
            set {
                base["schemaExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("prefixExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string PrefixExcludes {
            get {
                return ((string)(base["prefixExcludes"]));
            }
            set {
                base["prefixExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("suffixExcludes", DefaultValue="", IsKey=false, IsRequired=false)]
        public string SuffixExcludes {
            get {
                return ((string)(base["suffixExcludes"]));
            }
            set {
                base["suffixExcludes"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("keyOrdinal", DefaultValue=0, IsKey=false, IsRequired=false)]
        public int KeyOrdinal {
            get {
                return ((int)(base["keyOrdinal"]));
            }
            set {
                base["keyOrdinal"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("valueOrdinal", DefaultValue=1, IsKey=false, IsRequired=false)]
        public int ValueOrdinal {
            get {
                return ((int)(base["valueOrdinal"]));
            }
            set {
                base["valueOrdinal"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("activeColumn", DefaultValue="Active", IsKey=false, IsRequired=false)]
        public string ActiveColumn {
            get {
                return ((string)(base["activeColumn"]));
            }
            set {
                base["activeColumn"] = value;
            }
        }
        
        protected override System.Configuration.ConfigurationElement CreateNewElement() {
            return new LookupTablesElement();
        }
        
        protected override object GetElementKey(System.Configuration.ConfigurationElement element) {
            return ((LookupTablesElement)(element)).Name;
        }
        
        public void Add(LookupTablesElement element) {
            this.BaseAdd(element);
        }
        
        public void Remove(string key) {
            this.BaseRemove(key);
        }
        
        public void Clear() {
            this.BaseClear();
        }
    }
    
    public class ActiveMapCodeGenConfigurationSection : System.Configuration.ConfigurationSection {
        
        [System.Configuration.ConfigurationProperty("xmlns", DefaultValue="", IsKey=false, IsRequired=false)]
        public string Xmlns {
            get {
                return ((string)(base["xmlns"]));
            }
            set {
                base["xmlns"] = value;
            }
        }
        
        [System.Configuration.ConfigurationProperty("provider")]
        public ProviderElement Provider {
            get {
                return ((ProviderElement)(base["provider"]));
            }
        }
        
        [System.Configuration.ConfigurationProperty("codeGen")]
        public CodeGenElement CodeGen {
            get {
                return ((CodeGenElement)(base["codeGen"]));
            }
        }
        
        [System.Configuration.ConfigurationProperty("auditMapping")]
        public AuditMappingElement AuditMapping {
            get {
                return ((AuditMappingElement)(base["auditMapping"]));
            }
        }
        
        [System.Configuration.ConfigurationProperty("charAsBooleanColumns")]
        public CharAsBooleanColumnsCollection CharAsBooleanColumns {
            get {
                return ((CharAsBooleanColumnsCollection)(base["charAsBooleanColumns"]));
            }
        }
        
        [System.Configuration.ConfigurationProperty("views")]
        public ViewsCollection Views {
            get {
                return ((ViewsCollection)(base["views"]));
            }
        }
        
        [System.Configuration.ConfigurationProperty("procedures")]
        public ProceduresCollection Procedures {
            get {
                return ((ProceduresCollection)(base["procedures"]));
            }
        }
        
        [System.Configuration.ConfigurationProperty("tables")]
        public TablesCollection Tables {
            get {
                return ((TablesCollection)(base["tables"]));
            }
        }
        
        [System.Configuration.ConfigurationProperty("compositeTables")]
        public CompositeTablesCollection CompositeTables {
            get {
                return ((CompositeTablesCollection)(base["compositeTables"]));
            }
        }
        
        [System.Configuration.ConfigurationProperty("enumTables")]
        public EnumTablesCollection EnumTables {
            get {
                return ((EnumTablesCollection)(base["enumTables"]));
            }
        }
        
        [System.Configuration.ConfigurationProperty("lookupTables")]
        public LookupTablesCollection LookupTables {
            get {
                return ((LookupTablesCollection)(base["lookupTables"]));
            }
        }
    }
}
