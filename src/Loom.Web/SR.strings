
#! culture_info = System.Globalization.CultureInfo.InvariantCulture, System.Globalization.CultureInfo
#! resource_namespace = Loom.Web.Resources

[strings]
#EXCEPTIONS
ExceptionPostedFileSizeToLarge(string filename) = Error uploading {0}. The file size is to large.
ExceptionPostedFileSizeZeroLength(string filename) = Error uploading {0}. The file size is zero length.
ExceptionEmptyPathNoDirectory = Empty path has no directory.
ExceptionPathMustBeRooted = Path must be rooted.

#MESSAGES
MessageFileNotFound = The requested file was not found on the server.  The file may be temporarily unavailable.  Support personnel have been notified of this error.  Please check back at a later time.
MessageMaliciousInput = Potentially malicious input detected. Please enter only alphanumeric characters.
MessageGeneralError = An error has occurred in the application.
MessageResourceAccessDenied = Access to the requested resource is denied.

#SCRIPT
ScriptSafeMailLink(int keyLength) = <script language='javascript'>
=		function safeMessageSend(encodedTo){{
=         var messageTo = '';
=         for (i=0; i < encodedTo.length;){{
=             var letter = '';
=             letter = encodedTo.charAt(i) + encodedTo.charAt(i+1)
=             messageTo += String.fromCharCode(parseInt(letter,16));
=             i += 2;
=         }}
=         location.href = messageTo.substring({0}, messageTo.length);
=     }}
= </script>
=
ScriptRelationalList = <script language='javascript'>
=    <!--
=    function listItemSelected(list1,list2,keepFirst){
=    	if (list1 && list2 != null){
=    		if ( list2.selectedIndex >= 0 ){
=    			list2.originalSelectedValue = list2.options[list2.selectedIndex].value;}
=    		else{
=    			list2.originalSelectedValue = "";}	
=    		clearComboOrList(list2);
=    		var listValue;
=    		if ( list1.selectedIndex >= 0 ){
=    			listValue = list1.id + '=' + list1.options[list1.selectedIndex].value;} 
=    		else{
=    			if(keepFirst){
=    				listValue = list1.id + '=' + list1.options[0].value;}
=    			else{
=    				listValue = '';}}
=    		fillComboBox(list2, listValue);
=    		if (list2.onchange)	
=    			list2.onchange();}}
=    function clearComboOrList(list){
=    	if (list){
=    		list.selectedIndex = -1;		
=    		for (var i = list.options.length - 1; i >= 0; i--){
=    			list.options[i] = null;}		
=    		list.selectedIndex = -1;}}	
=    function fillComboBox(list, listValue){
=    	if (list){ 
=    		if (listValue != ''){
=    			if (this[list.id + 'AssocArray'][listValue]){
=    				var arrX = this[list.id + 'AssocArray'][listValue];
=    				for (var i = 0; i < arrX.length; i = i + 2){
=    					list.options[list.options.length] = new Option(arrX[i + 1], arrX[i]);
=    					if (list.options[list.options.length-1].value == list.originalSelectedValue){
=    						list.options[list.options.length-1].selected = true;}}}
=    			else{
=    				list.options[0] = new Option('None found', '');}}}}
=    function addCommandTo(functionName, newCommand){
=    	var scriptString;
=    	if (functionName){
=    		scriptString = new String(functionName);
=    		if (scriptString.indexOf('{') > 0){
=    			scriptString = scriptString.substring(scriptString.indexOf('{') + 1, scriptString.lastIndexOf('}') - 1);
=    			scriptString += newCommand;}} 
=    	else{
=    		scriptString = new String(newCommand);}	
=    	return new Function(scriptString);}
=    //-->
= </script>
=