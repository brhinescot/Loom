//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Configuration;
using System.Diagnostics.CodeAnalysis;

namespace Loom.Web.IO
{
    public class CachedUrlsElement : ConfigurationElement
    {
        [ConfigurationProperty("path", DefaultValue = "", IsKey = true, IsRequired = true)]
        public string Path
        {
            get { return ((string) (base["path"])); }
            set { base["path"] = value; }
        }

        [ConfigurationProperty("duration", DefaultValue = "00:00:00", IsKey = false, IsRequired = false)]
        public TimeSpan Duration
        {
            get { return ((TimeSpan) (base["duration"])); }
            set { base["duration"] = value; }
        }

        [ConfigurationProperty("verbs", DefaultValue = "GET", IsKey = false, IsRequired = false)]
        public string Verbs
        {
            get { return ((string) (base["verbs"])); }
            set { base["verbs"] = value; }
        }

        [ConfigurationProperty("varyBy", DefaultValue = "", IsKey = false, IsRequired = false)]
        public string VaryBy
        {
            get { return ((string) (base["varyBy"])); }
            set { base["varyBy"] = value; }
        }

        [ConfigurationProperty("emptyQueryStringOnly", DefaultValue = false, IsKey = false, IsRequired = false)]
        public bool EmptyQueryStringOnly
        {
            get { return ((bool) (base["emptyQueryStringOnly"])); }
            set { base["emptyQueryStringOnly"] = value; }
        }

        [ConfigurationProperty("emptyPathInfoOnly", DefaultValue = false, IsKey = false, IsRequired = false)]
        public bool EmptyPathInfoOnly
        {
            get { return ((bool) (base["emptyPathInfoOnly"])); }
            set { base["emptyPathInfoOnly"] = value; }
        }

        [ConfigurationProperty("serveFromMemory", DefaultValue = false, IsKey = false, IsRequired = false)]
        public bool ServeFromMemory
        {
            get { return ((bool) (base["serveFromMemory"])); }
            set { base["serveFromMemory"] = value; }
        }
    }

    [SuppressMessage("Microsoft.Design", "CA1010:CollectionsShouldImplementGenericInterface"),
        ConfigurationCollection(typeof (CachedUrlsElement))]
    public class CachedUrlsCollection : ConfigurationElementCollection
    {
        protected override ConfigurationElement CreateNewElement()
        {
            return new CachedUrlsElement();
        }

        protected override object GetElementKey(ConfigurationElement element)
        {
            return ((CachedUrlsElement) (element)).Path;
        }

        public void Add(CachedUrlsElement element)
        {
            BaseAdd(element);
        }

        public void Remove(string key)
        {
            BaseRemove(key);
        }

        public void Clear()
        {
            BaseClear();
        }
    }

    public class DiskOutputCacheSettingsSection : ConfigurationSection
    {
        [ConfigurationProperty("location", DefaultValue = "", IsKey = false, IsRequired = false)]
        public string Location
        {
            get { return ((string) (base["location"])); }
            set { base["location"] = value; }
        }

        [ConfigurationProperty("fileRemovalDelay", DefaultValue = "00:00:15", IsKey = false, IsRequired = false)]
        public TimeSpan FileRemovalDelay
        {
            get { return ((TimeSpan) (base["fileRemovalDelay"])); }
            set { base["fileRemovalDelay"] = value; }
        }

        [ConfigurationProperty("fileValidationDelay", DefaultValue = "00:00:05", IsKey = false, IsRequired = false)]
        public TimeSpan FileValidationDelay
        {
            get { return ((TimeSpan) (base["fileValidationDelay"])); }
            set { base["fileValidationDelay"] = value; }
        }

        [ConfigurationProperty("fileScavangingDelay", DefaultValue = "00:10:00", IsKey = false, IsRequired = false)]
        public TimeSpan FileScavangingDelay
        {
            get { return ((TimeSpan) (base["fileScavangingDelay"])); }
            set { base["fileScavangingDelay"] = value; }
        }

        [ConfigurationProperty("varyByLimitPerUrl", DefaultValue = 256, IsKey = false, IsRequired = false)]
        public int VaryByLimitPerUrl
        {
            get { return ((int) (base["varyByLimitPerUrl"])); }
            set { base["varyByLimitPerUrl"] = value; }
        }

        [ConfigurationProperty("cachedUrls")]
        public CachedUrlsCollection CachedUrls
        {
            get { return ((CachedUrlsCollection) (base["cachedUrls"])); }
        }
    }
}