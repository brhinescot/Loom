#region Using Directives

using System;
using System.Data;
using System.Runtime.Serialization;
using System.Xml;
using System.Xml.Schema;
using System.Xml.Serialization;
using Loom.Data;
using Loom.Data.Mapping;
using Loom.Data.Mapping.Schema;

#endregion

namespace AdventureWorks
{
    /// <summary>
    ///     This is an DataRecord class which wraps the dbo.DatabaseLog table.
    /// </summary>
    [Serializable]
    [XmlSchemaProvider("CreateSchema")]
    [ActiveTable("dbo", "DatabaseLog", "DatabaseLogID")]
    public class DatabaseLog : DataRecord<DatabaseLog>
    {
        private int _databaseLogId;
        private string _databaseUser;
        private string _event;
        private string _object;
        private DateTime _postTime;
        private string _schema;
        private string _tSQL;
        private string _xmlEvent;

        public DatabaseLog() { }
        protected DatabaseLog(SerializationInfo info, StreamingContext context) : base(info, context) { }

        /// <summary>
        ///     Primary key for DatabaseLog records.
        /// </summary>
        [ActiveColumn("DatabaseLogID", DbType.Int32, ColumnProperties.Identity | ColumnProperties.PrimaryKey | ColumnProperties.Unique, Ordinal = 1, MaxLength = 0)]
        public int DatabaseLogId
        {
            get => _databaseLogId;
            set
            {
                if (value == _databaseLogId && IsPropertyDirty("DatabaseLogID"))
                    return;

                _databaseLogId = value;
                MarkDirty("DatabaseLogID");
            }
        }

        /// <summary>
        ///     The date and time the DDL change occurred.
        /// </summary>
        [ActiveColumn("PostTime", DbType.DateTime, ColumnProperties.None, Ordinal = 2, MaxLength = 0)]
        public DateTime PostTime
        {
            get => _postTime;
            set
            {
                if (value == _postTime && IsPropertyDirty("PostTime"))
                    return;

                _postTime = value;
                MarkDirty("PostTime");
            }
        }

        /// <summary>
        ///     The user who implemented the DDL change.
        /// </summary>
        [ActiveColumn("DatabaseUser", DbType.String, ColumnProperties.None, Ordinal = 3, MaxLength = 128)]
        public string DatabaseUser
        {
            get => _databaseUser;
            set
            {
                if (value == _databaseUser && IsPropertyDirty("DatabaseUser"))
                    return;

                _databaseUser = value;
                MarkDirty("DatabaseUser");
            }
        }

        /// <summary>
        ///     The type of DDL statement that was executed.
        /// </summary>
        [ActiveColumn("Event", DbType.String, ColumnProperties.None, Ordinal = 4, MaxLength = 128)]
        public string Event
        {
            get => _event;
            set
            {
                if (value == _event && IsPropertyDirty("Event"))
                    return;

                _event = value;
                MarkDirty("Event");
            }
        }

        /// <summary>
        ///     The schema to which the changed object belongs.
        /// </summary>
        [ActiveColumn("Schema", DbType.String, ColumnProperties.Nullable, Ordinal = 5, MaxLength = 128)]
        public string Schema
        {
            get => _schema;
            set
            {
                if (value == _schema && IsPropertyDirty("Schema"))
                    return;

                _schema = value;
                MarkDirty("Schema");
            }
        }

        /// <summary>
        ///     The object that was changed by the DDL statment.
        /// </summary>
        [ActiveColumn("Object", DbType.String, ColumnProperties.Nullable, Ordinal = 6, MaxLength = 128)]
        public string Object
        {
            get => _object;
            set
            {
                if (value == _object && IsPropertyDirty("Object"))
                    return;

                _object = value;
                MarkDirty("Object");
            }
        }

        /// <summary>
        ///     The exact Transact-SQL statement that was executed.
        /// </summary>
        [ActiveColumn("TSQL", DbType.String, ColumnProperties.None, Ordinal = 7)]
        public string TSQL
        {
            get => _tSQL;
            set
            {
                if (value == _tSQL && IsPropertyDirty("TSQL"))
                    return;

                _tSQL = value;
                MarkDirty("TSQL");
            }
        }

        /// <summary>
        ///     The raw XML data generated by database trigger.
        /// </summary>
        [ActiveColumn("XmlEvent", DbType.String, ColumnProperties.None, Ordinal = 8)]
        public string XmlEvent
        {
            get => _xmlEvent;
            set
            {
                if (value == _xmlEvent && IsPropertyDirty("XmlEvent"))
                    return;

                _xmlEvent = value;
                MarkDirty("XmlEvent");
            }
        }

        public static XmlQualifiedName CreateSchema(XmlSchemaSet schemas)
        {
            return CreateXmlSchema(schemas, "http://www.devinterop.com/framework/data/active", true);
        }

        #region Nested type: Columns

        public struct Columns
        {
            public static QueryColumn DatabaseLogId => FetchColumn("DatabaseLogID");

            public static QueryColumn PostTime => FetchColumn("PostTime");

            public static QueryColumn DatabaseUser => FetchColumn("DatabaseUser");

            public static QueryColumn Event => FetchColumn("Event");

            public static QueryColumn Schema => FetchColumn("Schema");

            public static QueryColumn Object => FetchColumn("Object");

            public static QueryColumn TSQL => FetchColumn("TSQL");

            public static QueryColumn XmlEvent => FetchColumn("XmlEvent");
        }

        #endregion
    }
}